# Path to oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Update behaviour configuration
zstyle ':omz:update' mode reminder  # just remind me to update when it's time
# How often to auto-update (in days).
zstyle ':omz:update' frequency 13

# Don't auto correct everything, just the commands. all also tries to correct
# arguments and it's making too many mistakes to be useful.
unsetopt correct_all
setopt correct

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# The following line if you want to changes the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="mm/dd/yyyy"

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  asdf
)

# Shell completions
FPATH="$(brew --prefix)/share/zsh/site-functions:${ASDF_DIR}/completions:${FPATH}"

source $ZSH/oh-my-zsh.sh

# User configuration

## ENV VARS

export PATH="$HOME/.cargo/bin:$(brew --prefix)/opt/libpq/bin:$PATH"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='code'
fi
export GIT_EDITOR=vim
export BUNDLER_EDITOR=code

export DISABLE_SPRING=1
export RDBG_FRONTEND='vscode'
export RUBY_CONFIGURE_OPTS=--enable-yjit

# For ctop and other docker CLI tools
export DOCKER_HOST="unix://$HOME/.colima/default/docker.sock"

# Override MacOS provided icu4c with Homebrew one because it doesn't provide everything
export PATH="/usr/local/bin:/usr/local/opt/icu4c/bin:/usr/local/opt/icu4c/sbin:$HOME/.codeium/windsurf/bin:$PATH"

# Android Studio CLI tools
export PATH="$PATH:/Applications/Android\ Studio.app/Contents/MacOS:$HOME/Library/Android/sdk/platform-tools"
# Java for running android builds
export PATH="/opt/homebrew/opt/openjdk@17/bin:$PATH"

## ALIASES

alias zshconfig="code ~/.zshrc"
alias ohmyzsh="code $ZSH"

alias be="bundle exec"

alias surf="windsurf-next"

## CUSTOM COMMANDS

## Ollama local AI helpers

#### AI helper for explaining terminal commands, like "explain ls -a"
explain() {
  local model="${OLLAMA_MODEL:-llama3.2}"
  local prompt="You are a helpful assistant with deep understanding of macOS command line syntax.\nExplain what the following command does.\nBe very brief."
  ollama run "$model" "$prompt\n\n$*"
}

#### AI helper for command line syntax, like "cmd list subprocesses of pid 1234"
cmd() {
  local tmp=$(mktemp)
  local model="${OLLAMA_MODEL:-llama3.2}"
  local prompt="Give me the exact macOS command line syntax for this description. Provide only the command, no explanations or markdown."
  ollama run "$model" "$prompt\n\n$*" >"$tmp"
  cmd=$(cat "$tmp" \
    | sed 's/^```bash//g' \
    | sed 's/^```//g' \
    | sed 's/```$//g' \
    | sed '/^$/d' \
    | perl -lape's/^`(.+)`$/$1/g' \
    | perl -lape's/^\$\s+//g' \
  )
  rm -f "$tmp"
  echo -e "\n\x1b[32m$cmd\x1b[0m\n"
  echo -n "$cmd" | pbcopy
}
